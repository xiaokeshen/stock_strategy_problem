import sat.
/*
This program is used to resolve the stock problem.
*/
go=>
SalesOpportunity={{1,3,1,4,0,1,8,0},
                  {0,0,0,0,3,6,0,0},
                  {0,0,0,0,0,0,0,3},
                  {3,6,1,4,0,2,8,0},
                  {1,3,1,4,0,1,0,3},
                  {2,3,2,8,0,2,8,0},
                  {0,0,0,0,4,6,0,0},
                  {0,0,0,0,0,0,0,3},
                  {0,0,0,0,3,8,0,0},
                  {2,3,1,4,0,1,8,0},
                  {2,0,0,0,0,0,0,0},
                  {3,6,1,4,0,2,8,0},
                  {3,3,1,4,0,1,0,3},
                  {2,3,2,8,0,2,8,0},
                  {0,0,0,0,0,4,6,0},
                  {1,5,1,6,0,0,0,3},
                  {3,6,1,4,0,2,8,0},
                  {1,3,1,3,0,1,0,3},
                  {2,3,2,9,0,2,8,0},
                  {0,0,1,5,4,6,0,0}},

UnitPriceFromVendor={8000,4000,6000,1000,5000,10000,600,2000},
Profit={80*30,40*15,60*25,10*10,50*40,100*45,6*50,20*40},

TotalCostForAllOrders=0,
foreach(I in 1..len(SalesOpportunity), J in 1..len(UnitPriceFromVendor))
TotalCostForAllOrders:=TotalCostForAllOrders+SalesOpportunity[I,J]*UnitPriceFromVendor[J]
end,
print("Total cash flow needed for all the sales opportunites is:"),
writeln(TotalCostForAllOrders),
CashFlow = ceiling(TotalCostForAllOrders*0.4),
print("The available Cash Flow is:"),
writeln(CashFlow),

maxProfit(UnitPriceFromVendor,Profit,CashFlow,SalesOpportunity).

maxProfit(UnitPriceFromVendor,Profit,CashFlow,SalesOpportunity)=>
    N=SalesOpportunity.length,

    TargetOrder=new_array(N),
    foreach(I in 1..N)
        TargetOrder[I]::0..1
    end,

    TotalCost#=sum([SalesOpportunity[I,J]*UnitPriceFromVendor[J]*TargetOrder[I]:I in 1..N, J in 1..len(UnitPriceFromVendor)]),
    TotalProfit#=sum([SalesOpportunity[I,J]*Profit[J]*TargetOrder[I]:I in 1..N, J in 1..len(UnitPriceFromVendor)]),

    TotalCost#=<CashFlow,
    solve([$max(TotalProfit)],TargetOrder),
    %writeln(TotalProfit),
    %writeln(TotalCost),
    %writeln(TargetOrder),
    printf("Please prepare the stock for the orders list below:"),
    foreach(I in 1..len(TargetOrder),TargetOrder[I]>0)
        printf("%d,",I)
    end,
    nl,
    printf("And you can get the maximum profit of $%d by using the suggested stock strategy.\n",TotalProfit).





